#ME
--------
# Link latest drop to play Latest released song. When playing, display tracks button to bring the user to the tracklists page.
# Art is a horse, load up the youtube video in a modal with play controls and white X close button in the top right screen corner

#MAK
--------
# Got mak linked to Game page.
# Style modal, Sticky top containing the artwork, reciept type layout for the slider and number indicators. Sticky Purchase and accept. When confirm puchase is clicked and terms is not ticked, turn terms text red. Link terms page to MSHRS Agreement text.

#YOU
--------
# Style modal, Sticky top containing the artwork, reciept type layout for the slider and number indicators. Sticky Purchase and accept. When confirm is clicked and terms is not, turn terms text red. Link terms page to MSHRS Agreement text.
# Create conditional formatting to display message if user has no badges. Link support badges component.
# Create conditional formatting to display message if user has no CORE token with an option to get CORE.
# Link MAKPAY component.


# FOOTER.component
--------
# usage terms, generate and display on own page.
# MSHRS Agreement, Update based on new terms, proof legal and seal.
# Policy, standard web application policy to cover transactions, refunds, errors handelling, IP issues.


Create Pages
# Music
# 

Create Components:
# CorePay
# SupportersBadges
# Game
# Playhead [global]
# Tracklist

Additional scope:
# Google Analytics
# Track music player interaction data
# SEO
# Responsive Testing
# Transaction Testing

# Building the music player
-----------

- List of all tracks being read from a json file in the root directory.
- Style with styled components
- Next js and typescript
- Player music be imported to the _app.tsx file to ensure it is accesible through the whole application.

Components

- Playhead - Display the song art, title, artist,progress bar, Controls icon.

- PlayheadControls - The play head will display Play/Pause, Back, Forward, Shuffle and Repeat and volume, using icons with hover state of colour #ccc002.

- TrackList - Each item will display ID, TrackArt, TrackName,Track duration and a List icon. when a list element is clicked, it will play the audio of the selected song.



Here's an overview of the code structure and the tasks that need to be completed:

TrackList.tsx: This component displays a list of tracks and handles track selection. It fetches the tracks from a JSON file and renders them as a list. It also handles mouse events and opens a modal when a track is clicked. The task here is to ensure that the track selection functionality is working correctly.

Controls.tsx: This component renders the playback controls for the music player, such as play/pause, previous/next track buttons, volume slider, and track list icon. It also handles the state for showing/hiding the volume slider and the track list. The task here is to implement the event handlers for the controls and make them functional.

AudioPlayer.tsx: This component wraps the music player components and manages the audio playback. It keeps track of the selected track and the audio player instance. The task here is to ensure that the audio playback functionality is working correctly, including playing, pausing, and switching tracks.